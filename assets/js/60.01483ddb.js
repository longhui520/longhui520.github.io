(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{411:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"正则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[e._v("#")]),e._v(" 正则")]),e._v(" "),a("h2",{attrs:{id:"正则书写方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则书写方式"}},[e._v("#")]),e._v(" 正则书写方式")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 构造函数方式 ")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// new RegExp(pattern:string,model:{i,m,g})")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// new RegExp(pattern:RegExp,model:{i,m,g}) es5 model 不可以传，es6 会修改前面正则的模式")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 字面量 /aa/gim")]),e._v("\n")])])]),a("h2",{attrs:{id:"正则实例的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则实例的属性"}},[e._v("#")]),e._v(" 正则实例的属性")]),e._v(" "),a("ul",[a("li",[e._v("global")]),e._v(" "),a("li",[e._v("ignoreCase")]),e._v(" "),a("li",[e._v("unicode")]),e._v(" "),a("li",[e._v("stricky")]),e._v(" "),a("li",[e._v("multiline")]),e._v(" "),a("li",[e._v("dotAll")]),e._v(" "),a("li",[e._v("source")]),e._v(" "),a("li",[e._v("flags")]),e._v(" "),a("li",[e._v("lastIndex 正则下次搜索的位置，flags 为g reg.test reg.exec 有效 未匹配成功就为0")])]),e._v(" "),a("h2",{attrs:{id:"reg-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reg-exec"}},[e._v("#")]),e._v(" reg.exec")]),e._v(" "),a("ul",[a("li",[e._v("全局模式下，可以多次执行 从lastIndex开始匹配")]),e._v(" "),a("li",[e._v("粘滞模式下覆盖全局模式，从lastIndex开始，但是必须以这个位置匹配成功")])]),e._v(" "),a("h2",{attrs:{id:"reg-test-和reg-exec-类似，只是返回结果不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reg-test-和reg-exec-类似，只是返回结果不同"}},[e._v("#")]),e._v(" reg.test 和reg.exec 类似，只是返回结果不同")]),e._v(" "),a("h2",{attrs:{id:"regexp-的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-的属性"}},[e._v("#")]),e._v(" RegExp 的属性")]),e._v(" "),a("ul",[a("li",[e._v("input $_")]),e._v(" "),a("li",[e._v("lastMatch $&")]),e._v(" "),a("li",[e._v("lastParen $+")]),e._v(" "),a("li",[e._v("leftContext $`")]),e._v(" "),a("li",[e._v("rightContext $'")]),e._v(" "),a("li",[e._v("$n")])])])}),[],!1,null,null,null);t.default=r.exports}}]);